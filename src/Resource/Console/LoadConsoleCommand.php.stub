<?php

declare(strict_types=1);

namespace App\Console\Bootstrap;

use Viserio\Component\Console\Application;
use Viserio\Contract\Foundation\BootstrapState as BootstrapStateContract;
use Viserio\Contract\Foundation\Kernel as KernelContract;
use Viserio\Component\Foundation\Bootstrap\InitializeContainerBootstrap;

class LoadConsoleCommand implements BootstrapStateContract
{
    /**
     * {@inheritdoc}
     */
    public static function getPriority(): int
    {
        return 64;
    }

    /**
     * {@inheritdoc}
     */
    public static function getType(): string
    {
        return BootstrapStateContract::TYPE_AFTER;
    }

    /**
     * {@inheritdoc}
     */
    public static function getBootstrapper(): string
    {
        return InitializeContainerBootstrap::class;
    }

    /**
     * {@inheritdoc}
     */
    public static function isSupported(KernelContract $kernel): bool
    {
        $isNotBootstrapped = ! $kernel->isBootstrapped();

        return ($isNotBootstrapped && $kernel->getEnvironment() === 'prod') || $isNotBootstrapped;
    }

    /**
     * {@inheritdoc}
     */
    public static function bootstrap(KernelContract $kernel): void
    {
        $console = $kernel->getContainer()->get(Application::class);

        require $kernel->getRoutesPath('console.php');
    }
}
